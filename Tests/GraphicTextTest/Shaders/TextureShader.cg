
uniform	sampler2D	texDiffuse;

struct V_INPUT{
	float3	vPosition : POSITION;
	float2	vTexCoord;
		
	uniform float4x4	mProj;
	uniform float4x4	mView;
	uniform float4x4	mModel;
};

struct V_OUTPUT{
	float4	vPosition : POSITION;
	float2	vTexCoord;
};

struct F_OUTPUT{
	float4	vColor : COLOR;
};

V_OUTPUT	vmain(V_INPUT vinput){
	V_OUTPUT	voutput;

	float4x4 mModelViewProj = mul(vinput.mProj, mul(vinput.mView, vinput.mModel));
	//float4x4 mModelViewProj = mul(vinput.mModel, mul(vinput.mView, vinput.mProj));

	float4	vPosition = mul(mModelViewProj, float4(vinput.vPosition, 1.0f));

	voutput.vPosition = vPosition;
	voutput.vTexCoord = vinput.vTexCoord;

	return voutput;
}

F_OUTPUT	fmain(V_OUTPUT finput){
	F_OUTPUT	foutput;

	foutput.vColor = tex2D(texDiffuse, finput.vTexCoord);
	//foutput.vColor = float4(1.0f, 0.0f, 0.0f, 1.0f);

	return foutput;
}